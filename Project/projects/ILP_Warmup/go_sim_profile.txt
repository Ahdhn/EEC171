sim-profile: SimpleScalar/Alpha Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

warning: section `.comment' ignored...
sim: command line: ./sim-profile -iclass /afs/ece.ucdavis.edu/users/jowens/simplescalar/benchmarks/go.alpha 50 9 /afs/ece.ucdavis.edu/users/jowens/simplescalar/benchmarks/2stone9.in 

sim: simulation started @ Mon Apr 17 11:11:24 2017, options follow:

sim-profile: This simulator implements a functional simulator with
profiling support.  Run with the `-h' flag to see profiling options
available.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-all                    false # enable all profile options
-iclass                  true # enable instruction class profiling
-iprof                  false # enable instruction profiling
-brprof                 false # enable branch instruction profiling
-amprof                 false # enable address mode profiling
-segprof                false # enable load/store address segment profiling
-tsymprof               false # enable text symbol profiling
-taddrprof              false # enable text address profiling
-dsymprof               false # enable data symbol profiling
-internal               false # include compiler-internal symbols during symbol profiling
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)

sim: ** starting functional simulation **
Initial position from /afs/ece.ucdavis.edu/users/jowens/simplescalar/benchmarks/2stone9.in
  1 B C3 
  2 W pass
  3 B G7 
  4 W D7 
  5 B G4 
  6 W C5 
  7 B B4 
  8 W B5 
  9 B E4 
 10 W F8 
 11 B G8 
 12 W F6 
 13 B G6 
 14 W F7 
 15 B F9 
 16 W E9 
 17 B G9 
 18 W E8 
 19 B A5 
 20 W A6 
 21 B A4 
 22 W C6 
 23 B F5 
 24 W G3 
 25 B E6 
 26 W C4 
 27 B D4 
 28 W H4 
 29 B F3 
 30 W B3 
 31 B C2 
 32 W H5 
 33 B G2 
 34 W H6 
 35 B H7 
 36 W D5 
 37 B H3 
 38 W B2 
 39 B E5 
 40 W C1 
 41 B D6 
 42 W C7 
 43 B B7 
 44 W E1 
 45 B B1 
 46 W D1 
 47 B A3 
 48 W C9 
 49 B A2 
 50 W B8 
 51 B E7 
 52 W A7 
 53 B F2 
 54 W pass
 55 B pass
Game over
warning: partially supported sigprocmask() call...

sim: ** simulation statistics **
sim_num_insn              545812463 # total number of instructions executed
sim_num_refs              211690585 # total number of loads and stores executed
sim_elapsed_time                 33 # total simulation time in seconds
sim_inst_rate          16539771.6061 # simulation speed (in insts/sec)

sim_inst_class_prof    # instruction class profile
sim_inst_class_prof.array_size = 7
sim_inst_class_prof.bucket_size = 1
sim_inst_class_prof.count = 7
sim_inst_class_prof.total = 545812462
sim_inst_class_prof.imin = 0
sim_inst_class_prof.imax = 7
sim_inst_class_prof.average = 77973208.8571
sim_inst_class_prof.std_dev = 98955077.3682
sim_inst_class_prof.overflows = 0
# pdf == prob dist fn, cdf == cumulative dist fn
#          index      count    pdf 
sim_inst_class_prof.start_dist
load              167116204  30.62 
store              44574381   8.17 
uncond branch      14108495   2.58 
cond branch        59795886  10.96 
int computation   260042427  47.64 
fp computation       174881   0.03 
trap                    188   0.00 
sim_inst_class_prof.end_dist

ld_text_base           0x0120000000 # program text (code) segment base
ld_text_size                 376832 # program text (code) size in bytes
ld_data_base           0x0140000000 # program initialized data segment base
ld_data_size                 612032 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base          0x011ff9b000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry          0x0120007bb0 # program entry point (initial PC)
ld_environ_base        0x011ff97000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                  126 # total number of pages allocated
mem.page_mem                  1008k # total size of memory pages allocated
mem.ptab_misses             1656391 # total first level page table misses
mem.ptab_accesses        1516234710 # total page table accesses
mem.ptab_miss_rate           0.0011 # first level page table miss rate

